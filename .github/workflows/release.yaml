name: Create release

on:
  push:
    tags:
      - v*

permissions:
  contents: write
  packages: write
  checks: write
  attestations: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Run test suite
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.24.5'
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          go mod download
      - name: Build and run tests
        run: make run-tests BUILD_TAG=ALL
      - name: Install goveralls
        run: go install github.com/mattn/goveralls@latest
      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        run: goveralls -coverprofile=./testTarget/unit/cover.out -service=github
      - uses: actions/upload-artifact@v4
        with:
          name: libtokenizers.a
          path: ./artifacts/libtokenizers.a
      - uses: actions/upload-artifact@v4
        with:
          name: onnxruntime-linux-x64.so
          path: ./artifacts/onnxruntime-linux-x64.so
      - uses: actions/upload-artifact@v4
        with:
          name: hugot-cli-linux-x64
          path: ./artifacts/hugot-cli-linux-x64
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure()
        with:
          report_paths: './testTarget/unit/*.xml'
          fail_on_failure: true
          require_tests: true

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          target: hugot-runtime
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: libtokenizers.a
          path: .
      - uses: actions/download-artifact@v4
        with:
          name: onnxruntime-linux-x64.so
          path: .
      - uses: actions/download-artifact@v4
        with:
          name: hugot-cli-linux-x64
          path: .
      - name: Display structure of downloaded files
        run: ls -R
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "libtokenizers.a, onnxruntime-linux-x64.so, hugot-cli-linux-x64"
          generateReleaseNotes: true
          skipIfReleaseExists: true
